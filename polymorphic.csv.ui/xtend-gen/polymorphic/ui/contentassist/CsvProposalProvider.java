/**
 * generated by Xtext 2.13.0
 */
package polymorphic.ui.contentassist;

import java.util.function.BiConsumer;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.ui.editor.contentassist.ContentAssistContext;
import org.eclipse.xtext.ui.editor.contentassist.ICompletionProposalAcceptor;
import polymorphic.generator.GeneratorCollection;
import polymorphic.generator.csv.ICsvGenerator;
import polymorphic.ui.contentassist.AbstractCsvProposalProvider;

/**
 * See https://www.eclipse.org/Xtext/documentation/304_ide_concepts.html#content-assist
 * on how to customize the content assistant.
 */
@SuppressWarnings("all")
public class CsvProposalProvider extends AbstractCsvProposalProvider {
  private final GeneratorCollection generators = new GeneratorCollection();
  
  @Override
  public void completeLanguage_Name(final EObject model, final Assignment assignment, final ContentAssistContext context, final ICompletionProposalAcceptor acceptor) {
    super.completeLanguage_Name(model, assignment, context, acceptor);
    final BiConsumer<String, ICsvGenerator> _function = (String p1, ICsvGenerator p2) -> {
      acceptor.accept(this.createCompletionProposal(p1, context));
    };
    this.generators.getMap().forEach(_function);
  }
}
