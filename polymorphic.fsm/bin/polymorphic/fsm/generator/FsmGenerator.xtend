/*
 * generated by Xtext 2.13.0
 */
package polymorphic.fsm.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import polymorphic.fsm.fsm.Model

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class FsmGenerator extends AbstractGenerator {
private GeneratorCollection generators = new GeneratorCollection

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		val content = resource.contents.head as Model
		content.languages.forEach [ language |
			generators.map.get(language.name.toLowerCase).generate(content, language, fsa)
		]

		fsa.generateFile('''«content.name»/docker-compose.yml''', '''
			version: '3'
			services:
			  «FOR l : content.languages»
			  	«l.name»:
			  	  build:
			  	    context: ./«l.name»
			  «ENDFOR»
		''')
		
		
		fsa.generateFile('''«content.name»/build.sh''', '''
		mkdir -p ./inputs
		«FOR l : content.languages»
		rm -r ./«l.name»/inputs
		cp -r ./inputs ./«l.name»/inputs
	  	«ENDFOR»
		docker-compose build
		''')
		
		fsa.generateFile('''«content.name»/run.sh''', '''
		rm -r ./logs
		mkdir -p ./logs
		docker-compose up
		''')
	}
}
