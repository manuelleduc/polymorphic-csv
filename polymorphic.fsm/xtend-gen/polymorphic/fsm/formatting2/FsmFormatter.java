/**
 * generated by Xtext 2.13.0
 */
package polymorphic.fsm.formatting2;

import com.google.inject.Inject;
import java.util.Arrays;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;
import polymorphic.fsm.fsm.Machine;
import polymorphic.fsm.fsm.State;
import polymorphic.fsm.fsm.Transition;
import polymorphic.fsm.services.FsmGrammarAccess;

@SuppressWarnings("all")
public class FsmFormatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private FsmGrammarAccess _fsmGrammarAccess;
  
  protected void _format(final Machine machine, @Extension final IFormattableDocument document) {
    EList<State> _states = machine.getStates();
    for (final State state : _states) {
      document.<State>format(state);
    }
    EList<Transition> _transitions = machine.getTransitions();
    for (final Transition transition : _transitions) {
      document.<Transition>format(transition);
    }
  }
  
  public void format(final Object machine, final IFormattableDocument document) {
    if (machine instanceof XtextResource) {
      _format((XtextResource)machine, document);
      return;
    } else if (machine instanceof Machine) {
      _format((Machine)machine, document);
      return;
    } else if (machine instanceof EObject) {
      _format((EObject)machine, document);
      return;
    } else if (machine == null) {
      _format((Void)null, document);
      return;
    } else if (machine != null) {
      _format(machine, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(machine, document).toString());
    }
  }
}
